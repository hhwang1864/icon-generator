/* eslint-disable @next/next/no-img-element */
/* eslint-disable jsx-a11y/alt-text */
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { Button } from "~/component/Button";
import { FormGroup } from "~/component/FormGroup";
import { Input } from "~/component/Input";
import { api } from "~/utils/api";
import clsx from "clsx"

const colors = [
  'blue',
  'red',
  'pink',
  'green',
  'orange',
  'yellow',
  'white',
  'black'
]

const GeneratePage: NextPage = () => {

  const [form, setForm] = useState({
    prompt: "",
    color: ""
  });
  const [imageUrl, setImageUrl] = useState("");

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
    },
  });

  function handleFormSubmit(e: React.FormEvent) {
    e.preventDefault();
    generateIcon.mutate(form);
  }

  function updateForm(key: string) {
    return function (e: React.ChangeEvent<HTMLInputElement>) {
      setForm((prev) => ({
        ...prev,
        [key]: e.target.value,
      }));
    };
  }


  return (
    <>
      <Head>
        <title>Generate Icons</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col container mx-auto mt-24 gap-4 px-8">
        <h1 className="text-6xl">Generate Your Icons</h1>
        <p className="mb-12 text-2xl">
          Fill out the form below to start generating your icons.
        </p>

        <form className="flex flex-col gap-4" onSubmit={handleFormSubmit}>
          <h2>1. Describe how you want to design your icons.</h2>

          <FormGroup>
            <label>Prompt</label>
            <Input value={form.prompt} onChange={updateForm("prompt")}></Input>
          </FormGroup>

          <h2>2. Pick your icon color.</h2>

          <FormGroup className="grid grid-cols-4 mb-12">
            {colors.map (color => (
               <label
                  key={color}
                  className="flex gap-2 text-2xl">
                    Color
               <input
                type="radio"
                name="color"
                value={color}
                checked={color === form.color}
                onChange={() => setForm((prev) => ({...prev, color }))
                }
               ></input>
                 {color}
             </label>
            ))}


          </FormGroup>

          <Button
            isLoading={generateIcon.isLoading}
            disabled={generateIcon.isLoading}
           >
            Submit
          </Button>
        </form>


        {imageUrl &&(
          <>
          <h2>1. Describe how you want to design your icons.</h2>
          <section className="grid grid-cols-4 gap-4"></section>
          <Image
            src={imageUrl}
            alt="an image"
            width="100"
            height="100"
          />
          </>
        )}
      </main>
    </>
  );

};

export default GeneratePage;